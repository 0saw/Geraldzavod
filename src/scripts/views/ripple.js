var slice = [].slice;

(function($, window) {
  var Ripple;
  Ripple = (function() {
    function Ripple(el, options) {
      this.$el = $(el);
      this.$el.on('click', (function(_this) {
        return function(e) {
          var x, y;
          e.preventDefault();
          if ($(_this).data('pressed')) {
            return false;
          }
          $(_this).data('pressed', true);
          window.setTimeout(function() {
            return $(_this).data('pressed', false);
          }, 500);
          _this.$ink = _this.$el.children('.ink');
          if (_this.$ink.length === 0) {
            _this.$el.append('<div class="ink"></div>');
          }
          _this.$ink = _this.$el.children('.ink');
          if (_this.$ink.length === 0) {
            return;
          }
          _this.$ink.removeClass("animate");
          if (!_this.$ink.height() && !_this.$ink.width()) {
            _this.d = Math.max(_this.$el.outerWidth(), _this.$el.outerHeight());
            _this.$ink.css({
              height: _this.d,
              width: _this.d
            });
          }
          if (_this.d > 0) {
            x = e.pageX - _this.$el.offset().left - _this.d / 2;
            y = e.pageY - _this.$el.offset().top - _this.d / 2;
            console.log(_this.$ink[0]);
            return _this.$ink.css({
              top: y + 'px',
              left: x + 'px'
            }).addClass("animate");
          }
        };
      })(this));
    }

    return Ripple;

  })();
  return $.fn.extend({
    ripple: function() {
      var args, option;
      option = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return this.each(function() {
        return new Ripple(this);
      });
    }
  });
})(window.jQuery, window);

// ---
// generated by coffee-script 1.9.2
